apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

// 코틀린 안드로이드 익스텐션 플러그인을 적용합니다.
apply plugin: 'kotlin-android-extensions'

// 코틀린 코드에서 어노테이션 프로세싱을 사용할 수 있도록 kotlin-kapt 플러그인을 추가로 적용합니다.
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.thkim.mediapipelab"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {

//    implementation fileTree(dir: 'libs', include: ['*.jar'])
//
//    implementation 'androidx.appcompat:appcompat:1.2.0'
//    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    // MediaPipe deps
    implementation 'com.google.flogger:flogger:0.3.1'
    implementation 'com.google.flogger:flogger-system-backend:0.3.1'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'com.google.guava:guava:27.0.1-android'
    implementation 'com.google.guava:guava:27.0.1-android'
    implementation 'com.google.protobuf:protobuf-java:3.11.4'
    // CameraX core library
    def camerax_version = "1.0.0-alpha06"
    implementation "androidx.camera:camera-core:$camerax_version"
    implementation "androidx.camera:camera-camera2:$camerax_version"

    // retrofit2
//    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
//    implementation "androidx.core:core-ktx:+"

//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

//    // Appcompat-v7 (only Anko Commons)
//    implementation "org.jetbrains.anko:anko-appcompat-v7-commons:$anko_version"
//
//    // Appcompat-v7 (Anko Layouts)
//    implementation "org.jetbrains.anko:anko-appcompat-v7:$anko_version"
//    implementation "org.jetbrains.anko:anko-coroutines:$anko_version"

    // retrofit2 & REST
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    // Retrofit 에서 받은 응답을 옵저버블로 변환해주는 라이브러리를 추가합니다.
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    // 코틀린 표준 라이브러리를 의존성에 추가합니다.
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    // RxAndroid 와 RxJava 라이브러리를 추가합니다.
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"

    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    // Annotation processor
//    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Anko Commons 라이브러리를 의존성에 추가합니다.
    implementation "org.jetbrains.anko:anko-commons:$ankoVersion"
}
repositories {
    mavenCentral()
}